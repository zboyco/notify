// Code generated by goctl. DO NOT EDIT.
package types

type WxPusherCallbackRequest struct {
	Action string                      `json:"action"` // 操作
	Data   WxPusherCallbackRequestData `json:"data"`   // 数据
}

type WxPusherCallbackRequestData struct {
	AppID   int64  `json:"appId"`             // 应用ID
	AppName string `json:"appName"`           // 应用名称
	UID     string `json:"uid"`               // 用户ID
	Source  string `json:"source,omitempty"`  // 订阅来源
	Time    int    `json:"time"`              // 消息时间
	Extra   string `json:"extra,omitempty"`   // 额外数据
	Content string `json:"content,omitempty"` // 消息内容
}

type NotifyCreateRequest struct {
	Auth
	Notify
}

type NotifyListRequest struct {
	Auth
	Pager
}

type NotifyByIDRequest struct {
	Auth
	NotifyID uint `path:"notifyID"` // 消息ID
}

type NotifyListResponse struct {
	Total int64     `json:"total"` // 总数
	Data  []*Notify `json:"data"`  // 数据
}

type Notify struct {
	ID             uint   `json:"id,optional"`                         // 消息ID
	Channel        string `json:"channel,options=wxpusher|xizhi"`      // 消息渠道
	WechatUserID   string `json:"wechatUserID,optional"`               // 微信用户ID
	Topic          string `json:"topic,optional"`                      // 主题
	Title          string `json:"title"`                               // 标题
	Content        string `json:"content,optional"`                    // 内容
	MaxNotifyCount int    `json:"maxNotifyCount,range=[0:],default=1"` // 最大通知次数，0为不限制
	NotifyCount    int    `json:"notifyCoun,optional"`                 // 已通知次数
	StartAt        int    `json:"startAt"`                             // 开始时间
	EndAt          int    `json:"endAt,optional"`                      // 结束时间
	Spec           string `json:"spec,optional"`                       // Cron表达式（循环有效）
	LastNotifyAt   int    `json:"lastNotifyAt,optional"`               // 最后通知时间
}

type Auth struct {
	Token string `header:"token"` // 请求Token
}

type Pager struct {
	Limit  int `form:"limit,default=10"` // 每页数量
	Offset int `form:"offset,default=0"` // 偏移量
}
